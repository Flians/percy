cmake_minimum_required (VERSION 3.6)

include(${CMAKE_ROOT}/Modules/ExternalProject.cmake)

project(percy LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 14)
if (UNIX)
    set(CMAKE_CXX_FLAGS "-Wall -pedantic -fPIC ${CMAKE_CXX_FLAGS} -DLIN64")
endif()

option(TRAVIS_BUILD "Use Travis build configuration" OFF)
option(PERCY_TEST "Build tests" OFF)
option(PERCY_BENCH "Build benchmarks" OFF)
option(PERCY_BUILD_KITTY "Build kitty for percy" ON)
option(PERCY_USE_SYRUP "Use glucose-syrup instead of glucose" ON)
option(PERCY_BUILD_CMS "Enables support for CryptoMinisat" OFF)
option(STATIC_LIBABC "Builds libabc as a static library" ON)

if (${TRAVIS_BUILD})
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DTRAVIS_BUILD -Wno-sign-compare -Wno-parentheses")
endif()

# Glucose and Glucose-Syrup don't build properly on Windows
if (UNIX)
    if (PERCY_USE_SYRUP)
        find_package(Threads REQUIRED)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_SYRUP")
        add_subdirectory(syrup)
    else()
        add_subdirectory(glucose)
    endif()
endif()

if (PERCY_BUILD_KITTY)
    add_subdirectory(kitty EXCLUDE_FROM_ALL)
endif()
add_subdirectory(include)

if (PERCY_BUILD_CMS)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_CMS")
    set(ONLY_SIMPLE ON CACHE BOOL "Build simple version of CMS")
    set(ENABLE_PYTHON_INTERFACE OFF CACHE BOOL "Do not build Python inferface")
    set(IPASIR OFF CACHE BOOL "We do not need IPASIR")
    add_subdirectory(cryptominisat)
    SET(CMS_INCLUDE_DIR "${CMAKE_CURRENT_BINARY_DIR}/cryptominisat/cmsat5-src") 
    target_include_directories(percy INTERFACE ${CMS_INCLUDE_DIR})
    if (WIN32)
        link_directories("${PROJECT_BINARY_DIR}/cryptominisat/lib/Debug")
        link_directories("${PROJECT_BINARY_DIR}/cryptominisat/lib/Release")
    else()
        SET(CMS_LDIR "${CMAKE_CURRENT_BINARY_DIR}/cryptominisat/lib") 
        link_directories(${CMS_LDIR})
    endif()
    add_dependencies(percy libcryptominisat5)
endif()

if (PERCY_BENCH)
    add_subdirectory(bench)
endif()

set(ABC_USE_NAMESPACE "pabc")
add_subdirectory(abc)
if (UNIX)
    target_compile_definitions(libabcsat PUBLIC "LIN64" ABC_NAMESPACE=pabc ABC_NO_USE_READLINE)
elseif(WIN32)
    target_compile_definitions(libabcsat PUBLIC ABC_NAMESPACE=pabc ABC_USE_NO_READLINE NOMINMAX)
    if (STATIC_LIBABC)
        target_compile_definitions(libabcsat PUBLIC WIN32_NO_DLL)
    endif()
endif()

if (PERCY_TEST)
    enable_testing()
    add_subdirectory(test)
endif()

# Nauty does not seem to compile nicely on Windows
if (UNIX)
    add_subdirectory(nauty)
endif()
